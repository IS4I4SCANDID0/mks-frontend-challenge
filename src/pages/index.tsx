import Head from "next/head";
import { Montserrat } from "next/font/google";
import { useQuery } from "@tanstack/react-query";
import api from "@/services/api";
import { GetServerSideProps, NextPage } from "next";
import { NextFont } from "next/dist/compiled/@next/font";
import { ProductCard } from "@/components/productCard";

const montserrat: NextFont = Montserrat({ subsets: ["latin"], weight: ["300","500","600"] });

const getProducts = async ():Promise<IProducts[]> => {
  const { data } = await api.get<IProducts[]>("/products?page=1&rows=5&sortBy=id&orderBy=ASC");
  console.log('1 sou o data',data)
  return data
}

const Home: NextPage<IStaticProps> = ({ products: staticProducts }): JSX.Element => {
  console.log('2 sou static',staticProducts)
  const { data: clientProducts, isLoading } = useQuery<IProducts[]>({

    queryKey: ['products'],
    queryFn: getProducts,
    initialData: staticProducts,
  });

  const products = clientProducts || staticProducts
  console.log('sou o client product',clientProducts)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={``}>
        <ul>
          {isLoading ? (
            <p>Loading...</p>
          ) : (   
            clientProducts.products.map((product) => 
              <ProductCard key={product.id} product={product}/>
            )   
          )}
        </ul>
      </main>
    </>
  );
}

export const getStaticProps: GetServerSideProps = async () => {
  // const response = await api.get<IProducts[]>("/products?page=1&rows=5&sortBy=id&orderBy=ASC");
  // const products = response.data
  const products = await getProducts()

  return {
    props : {
      products
    },
    revalidate: 60 * 60 * 1000 
  }
}

export default Home